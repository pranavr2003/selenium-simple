Create a flask_routing.py, where the person runs it, and routes to 
https://127.168.xx/. Something like:

The directory structure of the repo (the file names are not final - simply show what the file does):

/pranavr2003/selenium-simple

--LICENSE
--README.md
--src
   |
   ---routing.py
   ---key_funcs_like_return.py
   ---get_ELEMENT_by_x.py
   ---set_defaults.py
   ---(probably)use_regex_to_check_stuff_in_url.py
   ---override_defaults.py
   ---run_it.py

On opening routing.py, something like this will show:

#### browser_window ##################

------------------------------------
https://127.168.xx/
------------------------------------
Browser Client: ____ (default: Chrome)
URL: ____

#### browser_window ##################

Once the URL is entered, man can add args onto the URL:

#### browser_window ##################

------------------------------------
https://127.168.xx/?rtc=true?keys=return/
------------------------------------
Browser Client: ____ (default: Chrome)
URL: python.org

#### browser_window ##################

Here, `rtc=true` stands for 'Right Click = true', so a right click is performed.
`keys=return` sends the RETURN key onto the webpage.

By default (specified in defaults.py), the window des not close upon execution of code.


